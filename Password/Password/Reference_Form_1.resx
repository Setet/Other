<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>